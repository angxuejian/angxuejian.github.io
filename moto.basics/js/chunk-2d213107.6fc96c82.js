(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d213107"],{aaa2:function(t,d,e){"use strict";e.r(d);var h=e("7a23");const a={class:"docs-wrapper"},s=Object(h["h"])('<h1 id="_imagemode-width-height-stylew-styleh" tabindex="-1"><a class="header-anchor" href="#_imagemode-width-height-stylew-styleh">#</a> _ImageMode(width, height, styleW, styleH)</h1><h2 id="gong-neng-miao-shu" tabindex="-1"><a class="header-anchor" href="#gong-neng-miao-shu">#</a> 功能描述</h2><p>图片模式</p><h2 id="can-shu" tabindex="-1"><a class="header-anchor" href="#can-shu">#</a> 参数</h2><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>必填</th><th>说明</th></tr></thead><tbody><tr><td>width</td><td>number</td><td></td><td>是</td><td>图片自身宽度</td></tr><tr><td>height</td><td>number</td><td></td><td>是</td><td>图片自身高度</td></tr><tr><td>styleW</td><td>number</td><td></td><td>是</td><td>图片样式宽度</td></tr><tr><td>styleH</td><td>number</td><td></td><td>是</td><td>图片样式高度</td></tr></tbody></table><h2 id="hui-zhi-fang-fa" tabindex="-1"><a class="header-anchor" href="#hui-zhi-fang-fa">#</a> 绘制方法</h2><p>返回值均以<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/drawImage">ctx.drawImage()</a>函数的参数值返回，重新绘制图片大小</p><pre><code>drawImage(image, dx, dy)\ndrawImage(image, dx, dy, dw, dh)\ndrawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\n</code></pre><table><thead><tr><th>名称</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>getAspectFit</td><td>{ dx, dy, dw, dh }</td><td>缩放模式，保持纵横比缩放图片，使图片的长边能完全显示出来。也就是说，可以完整地将图片显示出来。</td></tr><tr><td>getAspectFill</td><td>{ dx, dy, dw, dh }</td><td>缩放模式，保持纵横比缩放图片，只保证图片的短边能完全显示出来。也就是说，图片通常只在水平或垂直方向是完整的，另一个方向将会发生截取。</td></tr><tr><td>getTop</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的顶部区域</td></tr><tr><td>getBottom</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的底部区域</td></tr><tr><td>getCenter</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的中间区域</td></tr><tr><td>getLeft</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的左边区域</td></tr><tr><td>getRight</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的右边区域</td></tr><tr><td>getTopLeft</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的左上边区域</td></tr><tr><td>getTopRight</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的右上边区域</td></tr><tr><td>getBottomLeft</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的左下边区域</td></tr><tr><td>getBottomRight</td><td>{ sx, sy, sw, sh, dx, dy, dw, dh }</td><td>裁剪模式，不缩放图片，只显示图片的右下边区域</td></tr></tbody></table><h2 id="yang-shi-suo-fang-fang-fa" tabindex="-1"><a class="header-anchor" href="#yang-shi-suo-fang-fang-fa">#</a> 样式缩放方法</h2><p>固定宽度或高度样式，在保持原图宽高比例的情况下，计算出另一个方向大小，然后改变图片样式即可</p><table><thead><tr><th>名称</th><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>getWidthFix</td><td>{ height }</td><td>缩放模式，宽度不变，高度自动变化，保持原图宽高比不变</td></tr><tr><td>getHeightFix</td><td>{ width }</td><td>缩放模式，高度不变，宽度自动变化，保持原图宽高比不变</td></tr></tbody></table><h2 id="shi-li" tabindex="-1"><a class="header-anchor" href="#shi-li">#</a> 示例</h2><pre><code class="language-js">import _ImageMode from &#39;@angxuejian/lodash/ImageMode&#39;\nconst canvas = document.getElementById(&#39;canvas&#39;)\nconst image = document.getElementById(&#39;image&#39;)\nconst ctx = canvas.getContext(&#39;2d&#39;)\nconst styleW = 151\nconst styleH = 240\n\n\n// 绘制方法示例\nconst loadImg = new Image()\nloadImg.src = &#39;xx/xx.png&#39; // 图片地址\nloadImg.onload = function(res) {\n  const { width, height } = d.path[0]\n  canvas.width = width\n  canvas.height = height\n  const ImageMode = new _ImageMode(width, height, styleW, styleH)\n  const { sx, sy, sw, sh, dx, dy, dw, dh } = ImageModeo.getCenter()\n  ctx.drawImage(im,  sx, sy, sw, sh, dx, dy, dw, dh)\n  const src = canvas.toDataURL({format: &#39;image/png&#39;, quality:1, width:styleW, height:styleH })\n\n  image.style = `width: ${styleW}px; height: ${styleH}px`\n  image.src = src\n}\n\n\n// ===============================\n// ===============================\n// ===============================\n\n\n// 样式缩放方法示例\nconst ImageMode = new _ImageMode(image.width, image.height, styleW, styleH)\nconst { height } = ImageMode.getWidthFix()\nimage.style.height = height\n</code></pre>',14),n=[s];function r(t,d){const e=Object(h["H"])("highlight");return Object(h["P"])((Object(h["y"])(),Object(h["f"])("div",a,n)),[[e]])}var g=e("8248"),i=e("bc48"),o={name:"component-docs",components:{demoBlock:g["a"]},directives:{highlight:i["a"]}},c=e("b9a6"),y=e.n(c);const w=y()(o,[["render",r]]);d["default"]=w}}]);