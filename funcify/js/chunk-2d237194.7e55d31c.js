(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d237194"],{fa58:function(e,o,c){"use strict";c.r(o);var n=c("7a23");const r={class:"docs-wrapper"};function t(e,o){const c=Object(n["F"])("highlight");return Object(n["N"])((Object(n["y"])(),Object(n["f"])("div",r,o[0]||(o[0]=[Object(n["h"])('<h1 id="two-decimal-places" tabindex="-1"><a class="header-anchor" href="#two-decimal-places">#</a> Two decimal places</h1><p>1、使用<code>toFixed</code>方法</p><pre><code class="language-js">const number = 123.5678\nconst roundedNumber = number.toFixed(2)\n\nconsole.log(roundedNumber);  // &#39;123.57&#39;\n</code></pre><p><code>toFixed</code> 可以成功保留小数，但是会更改为<strong>string</strong>类型，并且会四舍五入。</p><br><br><p>2、使用<code>Math.floor</code>方法</p><pre><code class="language-js">const number = 123.4567;\nconst truncatedNumber = Math.floor(number * 100) / 100;\n\nconsole.log(truncatedNumber);  // 123.45\n</code></pre><p><code>Math.floor</code> 可以成功保留小数，并且不会更改类型和四舍五入。</p><p>根据乘法，<code>Math.floor(number * 100)</code> 会得到一个整数，然后除以 100，得到保留两位的小数。</p>',10)]))),[[c]])}var d=c("8248"),a=c("bc48"),s={name:"component-docs",components:{demoBlock:d["a"]},directives:{highlight:a["a"]}},p=c("b9a6"),l=c.n(p);const u=l()(s,[["render",t]]);o["default"]=u}}]);