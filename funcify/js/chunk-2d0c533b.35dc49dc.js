(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c533b"],{"3da5":function(a,t,e){"use strict";e.r(t);var d=e("7a23");const r={class:"docs-wrapper"};function s(a,t,e,s,h,n){const o=Object(d["F"])("highlight");return Object(d["N"])((Object(d["y"])(),Object(d["f"])("div",r,t[0]||(t[0]=[Object(d["h"])('<h1 id="an-zhuang-shi-yong" tabindex="-1"><a class="header-anchor" href="#an-zhuang-shi-yong">#</a> 安装/使用</h1><h2 id="npm-an-zhuang" tabindex="-1"><a class="header-anchor" href="#npm-an-zhuang">#</a> npm 安装</h2><p>推荐使用 npm 的方式安装，它能更好地和 webpack 打包工具配合使用。</p><pre><code class="language-shell">npm install @angxuejian/lodash --save\n</code></pre><h2 id="shi-yong" tabindex="-1"><a class="header-anchor" href="#shi-yong">#</a> 使用</h2><h3 id="js-shi-yong" tabindex="-1"><a class="header-anchor" href="#js-shi-yong">#</a> js 使用</h3><p>在需要调用方法的 js文件中引入<a href="https://github.com/angxuejian/funcify/tree/main/package/lodash/umd/lodash.js">jssdk文件</a></p><pre><code class="language-js">import lodash from &#39;./umd/lodash.js&#39; // 项目本地路径\n// or\nconst lodash = require(&#39;./umd/lodash.js&#39;)\n// or\n&lt;script src=&#39;./umd/lodash.js&#39;&gt;&lt;/script&gt;\n</code></pre><h3 id="npm-shi-yong" tabindex="-1"><a class="header-anchor" href="#npm-shi-yong">#</a> npm 使用</h3><p>全部引用</p><pre><code class="language-js">import lodash from &#39;@angxuejian/lodash&#39;\n// or\nconst lodash = require(&#39;@angxuejian/lodash&#39;)\n</code></pre><p>按需引用</p><p>在默认 <strong>@angxuejian/lodash</strong>路径后加入引入方法的名称即可</p><pre><code class="language-js">import _isTypeOf from &#39;@angxuejian/lodash/isTypeOf&#39;\n// or\nconst _isTypeOf = require(&#39;@angxuejian/lodash/isTypeOf&#39;)\n</code></pre><h2 id="quan-bu-fang-fa" tabindex="-1"><a class="header-anchor" href="#quan-bu-fang-fa">#</a> 全部方法</h2><p>所有方法前缀都有 <strong>_</strong> 下划线</p><table><thead><tr><th>function</th><th>desc</th></tr></thead><tbody><tr><td><a href="#/lodash/isTypeOf">_isTypeOf</a></td><td>判断类型是否一致</td></tr><tr><td><a href="#/lodash/toSpinalCase">_toSpinalCase</a></td><td>将驼峰命名转为脊柱命名</td></tr><tr><td><a href="#/lodash/getDepthValue">_getDepthValue</a></td><td>获取对象多层嵌套的值</td></tr><tr><td><a href="#/lodash/getParams">_getParams</a></td><td>获取url中value值</td></tr><tr><td><a href="#/lodash/ImageMode">_ImageMode</a></td><td>图片模式</td></tr><tr><td><a href="#/lodash/debounce">_debounce</a></td><td>防抖</td></tr><tr><td><a href="#/lodash/throttle">_throttle</a></td><td>节流</td></tr><tr><td><a href="#/lodash/hexToRgb">_hexToRgb</a></td><td>hex转rgb</td></tr><tr><td><a href="#/lodash/hsvToRgb">_hsvToRgb</a></td><td>hsv转rgb</td></tr><tr><td><a href="#/lodash/rgbToHex">_rgbToHex</a></td><td>rgb转hex</td></tr><tr><td><a href="#/lodash/rgbToHsv">_rgbToHsv</a></td><td>rgb转hsv</td></tr><tr><td><a href="#/lodash/rgbToHsv">_Calendar</a></td><td>日期对象</td></tr></tbody></table>',17)]))),[[o]])}var h=e("8248"),n=e("bc48"),o={name:"component-docs",components:{demoBlock:h["a"]},directives:{highlight:n["a"]}},l=e("b9a6"),c=e.n(l);const g=c()(o,[["render",s]]);t["default"]=g}}]);