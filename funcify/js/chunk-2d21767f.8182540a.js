(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21767f"],{c71f:function(e,n,t){"use strict";t.r(n);var o=t("7a23");const c={class:"docs-wrapper"};function s(e,n){const t=Object(o["F"])("highlight");return Object(o["N"])((Object(o["y"])(),Object(o["f"])("div",c,n[0]||(n[0]=[Object(o["h"])('<h1 id="pointer-events" tabindex="-1"><a class="header-anchor" href="#pointer-events">#</a> Pointer events</h1><p><code>pointer-events</code> CSS 属性指定在什么情况下 (如果有) 某个特定的图形元素可以成为鼠标事件的 target</p><p>1、none</p><p>对一个元素进行样式设置时，该元素将不会响应任何鼠标事件（例如点击、悬停、拖动等），并且这些事件会传递给该元素下面的其他元素。</p><h4>示例：</h4><ol><li>让元素透明于鼠标事件。在某些情况下，你可能希望一个元素（比如一个浮动的提示框或动画效果）不会阻挡鼠标事件，使得下层的内容可以被点击或交互。此时，你可以对这个元素应用 pointer-events: none。</li><li>创建只用于视觉效果的元素。如果你有一个仅用于视觉效果（例如装饰性背景或动画效果）的元素，而不希望它阻挡鼠标事件，可以使用 pointer-events: none。</li></ol><pre><code class="language-css">pointer-events: none\n</code></pre>',7)]))),[[t]])}var i=t("8248"),r=t("bc48"),p={name:"component-docs",components:{demoBlock:i["a"]},directives:{highlight:r["a"]}},a=t("b9a6"),d=t.n(a);const h=d()(p,[["render",s]]);n["default"]=h}}]);